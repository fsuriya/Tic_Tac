{"version":3,"sources":["components/firebase.js","components/play.js","components/cardHistory.js","components/history.js","components/detail.js","components/Navbar/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","historyCollection","firebaseApp","firestore","collection","Play","winner","useState","Message","SetMessage","Dim","SetDim","Turn","gameEnd","Board","SetBoard","Boardrender","SetBoardrender","setDimension","value","console","log","initBoard","temp","i","j","push","renderBoard","temp2","id","style","width","height","className","onClick","e","clickButton","fontSize","endRender","checkWinner","player","a","isWin","x1","x2","rowwin","colwin","checkdraw","isDraw","saveScore","add","dim","board","time","Date","toLocaleString","win","then","docRef","catch","error","parseInt","currentTarget","changeTurn","useEffect","Container","Row","Col","xs","Form","Label","column","sm","Control","type","placeholder","onChange","target","frameBorder","scrolling","src","title","CardHistory","winnerDesktop","winnerMobile","info","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobileDevice","DeleteHistory","doc","delete","Card","Body","color","alignItems","Button","variant","href","History","His","setHis","onSnapshot","querySnapshot","forEach","d","data","split","map","history","index","Detail","URLSearchParams","useLocation","search","get","tempBoard","SNavbar","Navbar","bg","expand","marginLeft","marginRight","Brand","Toggle","aria-controls","Collapse","Nav","Link","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa0c3424.chunk.js","sourcesContent":["// เรียกใช้ module\r\nimport firebase from '@firebase/app'\r\nimport '@firebase/firestore'\r\n\r\n// ค่า minimum configuration คือ `apiKey` และ `projectId`\r\nconst config = {\r\n    apiKey: \"AIzaSyD7aNgu0w_KtYEW9oxgyLMNTDSaUj2LplY\",\r\n    authDomain: \"tic-tac-a9787.firebaseapp.com\",\r\n    projectId: \"tic-tac-a9787\",\r\n    storageBucket: \"tic-tac-a9787.appspot.com\",\r\n    messagingSenderId: \"605630121168\",\r\n    appId: \"1:605630121168:web:26a133a474e67dd3384ad5\",\r\n    measurementId: \"G-Q3EYRFLFNP\"\r\n}\r\n\r\nexport default firebase.apps[0] || firebase.initializeApp(config)","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form, Row, Col, Container } from \"react-bootstrap\";\r\n\r\n// import firebase\r\nimport firebaseApp from \"./firebase\";\r\nconst db = firebaseApp.firestore();\r\nconst historyCollection = db.collection(\"History\");\r\n// End import firebase\r\n\r\nconst Play = () => {\r\n  const [Message, SetMessage] = useState(\"\");\r\n  const [Dim, SetDim] = useState(3);\r\n  // const [Turn, SetTurn] = useState(1);\r\n  var Turn = 1;\r\n  var gameEnd = false;\r\n  var winner;\r\n  const [Board, SetBoard] = useState();\r\n  const [Boardrender, SetBoardrender] = useState();\r\n\r\n  function setDimension(value) {\r\n    console.log(value);\r\n    if (value < 3) {\r\n      SetMessage(`Please set Dimension more than 3`);\r\n    } else {\r\n      SetDim(value);\r\n    }\r\n  }\r\n\r\n  function initBoard() {\r\n    let temp = [];\r\n    for (let i = 0; i < Dim; i++) {\r\n      for (let j = 0; j < Dim; j++) {\r\n        temp.push(0);\r\n      }\r\n    }\r\n    SetBoard(temp);\r\n  }\r\n\r\n  function renderBoard() {\r\n    let temp2 = [];\r\n    for (let i = 0; i < Dim; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < Dim; j++) {\r\n        // reder button to board\r\n        if (Board != null && Board[i * Dim + j] === 0) {\r\n          temp.push(\r\n            <button\r\n              id={i * Dim + j}\r\n              style={{ width: 330 / Dim, height: 330 / Dim }}\r\n              className=\"Board\"\r\n              onClick={(e) => {\r\n                clickButton(e);\r\n              }}\r\n            >\r\n              <div style={{}} className=\"Text-Board\">\r\n                &nbsp;\r\n              </div>\r\n            </button>\r\n          );\r\n        }\r\n        // render card X to board\r\n        else if (Board != null && Board[i * Dim + j] === 1) {\r\n          temp.push(\r\n            <button\r\n              id={i * Dim + j}\r\n              style={{ width: 330 / Dim, height: 330 / Dim }}\r\n              className=\"Board-notclick\"\r\n            >\r\n              <div className=\"Text-Board\" style={{ fontSize: 240 / Dim }}>\r\n                X\r\n              </div>\r\n            </button>\r\n          );\r\n        }\r\n        // render card X to board\r\n        else if (Board != null && Board[i * Dim + j] === 2) {\r\n          temp.push(\r\n            <button\r\n              id={i * Dim + j}\r\n              style={{ width: 330 / Dim, height: 330 / Dim }}\r\n              className=\"Board-notclick\"\r\n            >\r\n              <div className=\"Text-Board\" style={{ fontSize: 240 / Dim }}>\r\n                O\r\n              </div>\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n      temp2.push(<div>{temp}</div>);\r\n    }\r\n    SetBoardrender(temp2);\r\n  }\r\n\r\n  function endRender() {\r\n    let temp2 = [];\r\n    for (let i = 0; i < Dim; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < Dim; j++) {\r\n        // reder button to board\r\n        if (Board != null && Board[i * Dim + j] === 0) {\r\n          temp.push(\r\n            <button\r\n              id={i * Dim + j}\r\n              style={{ width: 330 / Dim, height: 330 / Dim }}\r\n              className=\"Board\"\r\n            >\r\n              <div style={{}} className=\"Text-Board\">\r\n                &nbsp;\r\n              </div>\r\n            </button>\r\n          );\r\n        }\r\n        // render card X to board\r\n        else if (Board != null && Board[i * Dim + j] === 1) {\r\n          temp.push(\r\n            <button\r\n              id={i * Dim + j}\r\n              style={{ width: 330 / Dim, height: 330 / Dim }}\r\n              className=\"Board-notclick\"\r\n            >\r\n              <div className=\"Text-Board\" style={{ fontSize: 240 / Dim }}>\r\n                X\r\n              </div>\r\n            </button>\r\n          );\r\n        }\r\n        // render card X to board\r\n        else if (Board != null && Board[i * Dim + j] === 2) {\r\n          temp.push(\r\n            <button\r\n              id={i * Dim + j}\r\n              style={{ width: 330 / Dim, height: 330 / Dim }}\r\n              className=\"Board-notclick\"\r\n            >\r\n              <div className=\"Text-Board\" style={{ fontSize: 240 / Dim }}>\r\n                O\r\n              </div>\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n      temp2.push(<div>{temp}</div>);\r\n    }\r\n    SetBoardrender(temp2);\r\n  }\r\n\r\n  async function checkWinner(player) {\r\n    let isWin = false;\r\n    let x1 = true;\r\n    let x2 = true;\r\n    for (let i = 0; i < Dim; i++) {\r\n      let rowwin = true;\r\n      let colwin = true;\r\n      for (let j = 0; j < Dim; j++) {\r\n        rowwin &= Board[i * Dim + j] === player;\r\n        colwin &= Board[j * Dim + i] === player;\r\n        if (i === j) {\r\n          x1 &= Board[i * Dim + j] === player;\r\n        }\r\n        if (i + j + 1 === Dim) {\r\n          x2 &= Board[i * Dim + j] === player;\r\n        }\r\n      }\r\n      if (rowwin === 1 || colwin === 1) {\r\n        isWin = true;\r\n      }\r\n    }\r\n    if (x1 === 1 || x2 === 1) {\r\n      isWin = true;\r\n    }\r\n    return isWin;\r\n  }\r\n\r\n  async function checkdraw() {\r\n    let isDraw = false;\r\n    let temp = true;\r\n    for (let i = 0; i < Dim; i++) {\r\n      for (let j = 0; j < Dim; j++) {\r\n        temp &= Board[i * Dim + j] != 0;\r\n      }\r\n    }\r\n    if (temp === 1) {\r\n      isDraw = true;\r\n    }\r\n    return isDraw;\r\n  }\r\n\r\n  function saveScore() {\r\n    historyCollection\r\n      .add({\r\n        dim: Dim,\r\n        board: Board,\r\n        time: Date().toLocaleString(),\r\n        win: winner,\r\n      })\r\n      .then((docRef) => {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  }\r\n\r\n  async function changeTurn() {\r\n    await renderBoard();\r\n    // check winner\r\n    console.log(Board);\r\n    if (await checkWinner(1)) {\r\n      SetMessage(`Player X is win`);\r\n      gameEnd = true;\r\n      winner = 1;\r\n      endRender();\r\n      saveScore();\r\n    } else if (await checkWinner(2)) {\r\n      SetMessage(`Player O is win`);\r\n      gameEnd = true;\r\n      winner = 2;\r\n      endRender();\r\n      saveScore();\r\n    } else if (\r\n      (await checkdraw()) &&\r\n      !((await checkWinner(1)) || (await checkWinner(1)))\r\n    ) {\r\n      SetMessage(`Draw`);\r\n      gameEnd = true;\r\n      winner = 0;\r\n      saveScore();\r\n    }\r\n    // End check winner\r\n\r\n    // change turn\r\n    if (Turn === 1 && !gameEnd) {\r\n      // await SetTurn(2);\r\n      Turn = 2;\r\n      SetMessage(`Player O turn.`);\r\n    } else if (Turn === 2 && !gameEnd) {\r\n      // await SetTurn(1);\r\n      Turn = 1;\r\n      SetMessage(`Player X turn.`);\r\n    }\r\n    // End change turn\r\n  }\r\n\r\n  function reset() {\r\n    //  let temp = Board;\r\n    //  SetBoard([1])\r\n    // temp[0] = 0\r\n    initBoard();\r\n    SetMessage(`Game reset!!!`);\r\n    renderBoard();\r\n    console.log(Board);\r\n  }\r\n\r\n  function clickButton(e) {\r\n    let temp = Board;\r\n    if (Turn === 1) {\r\n      temp[parseInt(e.currentTarget.id)] = 1;\r\n    } else if (Turn === 2) {\r\n      temp[parseInt(e.currentTarget.id)] = 2;\r\n    }\r\n    changeTurn();\r\n    console.log(`${Turn}`);\r\n    SetBoard(temp);\r\n  }\r\n\r\n  // Change state\r\n  useEffect(() => {\r\n    setDimension(3);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    SetMessage(`Set dimension to ${Dim} X ${Dim}`);\r\n    initBoard();\r\n  }, [Dim]);\r\n\r\n  useEffect(() => {\r\n    console.log(Board);\r\n    renderBoard();\r\n  }, [Board]);\r\n  // End\r\n\r\n  return (\r\n    <div className=\"Center\">\r\n      <br />\r\n      <Container>\r\n        <Row>\r\n          <Col xs={1}></Col>\r\n          <Col xs={3}>\r\n            <Form.Label column sm=\"2\">\r\n              Dimension\r\n            </Form.Label>\r\n          </Col>\r\n          <Col xs={7}>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Dimension\"\r\n              onChange={(e) => setDimension(parseInt(e.target.value))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <br />\r\n      <div className=\"message\">{Message}</div>\r\n      {Boardrender}\r\n      <br />\r\n      <div className=\"btns\" onClick={(e) => reset()}>\r\n        Reset\r\n      </div>\r\n      <div className=\"github\">\r\n        <iframe\r\n          frameBorder=\"0\"\r\n          height=\"20px\"\r\n          scrolling=\"0\"\r\n          src=\"https://ghbtns.com/github-btn.html?user=fsuriya&repo=Tic_Tac&type=star\"\r\n          title=\"github-star\"\r\n          width=\"51px\"\r\n        />\r\n        <iframe\r\n          frameBorder=\"0\"\r\n          height=\"20px\"\r\n          scrolling=\"0\"\r\n          src=\"https://ghbtns.com/github-btn.html?user=fsuriya&type=follow\"\r\n          title=\"github-follow\"\r\n          width=\"123px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport AppCSS from \"../App.css\";\r\n\r\n// import firebase\r\nimport firebaseApp from \"./firebase\";\r\nconst db = firebaseApp.firestore();\r\nconst historyCollection = db.collection(\"History\");\r\n// End import firebase\r\n\r\nconst CardHistory = ({ info }) => {\r\n  // Define responsive\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n  const isTabletOrMobileDevice = useMediaQuery({\r\n    query: \"(max-device-width: 1224px)\",\r\n  });\r\n  // End Define responsive\r\n\r\n  const DeleteHistory = () => {\r\n    const deleteHis = historyCollection\r\n      .doc(info.id)\r\n      .delete()\r\n      .then(() => console.log(`Delete ${info.id} successfully!`));\r\n  };\r\n\r\n  let winnerDesktop;\r\n  if (info.win == 0) {\r\n    winnerDesktop = <a style={{ fontSize: 15}}>Draw</a>;\r\n  } else if (info.win == 1) {\r\n    winnerDesktop = <a style={{ fontSize: 15}}>Play X is won</a>;\r\n  } else if (info.win == 2) {\r\n    winnerDesktop = <a style={{ fontSize: 15}}>Play O is won</a>;\r\n  }\r\n\r\n  let winnerMobile;\r\n  if (info.win == 0) {\r\n    winnerMobile = <a style={{ fontSize: 12}}>Draw</a>;\r\n  } else if (info.win == 1) {\r\n    winnerMobile = <a style={{ fontSize: 12}}>Play X is won</a>;\r\n  } else if (info.win == 2) {\r\n    winnerMobile = <a style={{ fontSize: 12}}>Play O is won</a>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isDesktopOrLaptop && (\r\n        <>\r\n          <Card>\r\n            <Card.Body>\r\n              <Container>\r\n                <Row>\r\n                  <Col xs={10}>\r\n                    <h5 style={{ color: \"DarkGray\" }}>\r\n                      {info.time[4]} {info.time[2]} {info.time[1]}{\" \"}\r\n                      {info.time[3]}\r\n                    </h5>\r\n                    {winnerDesktop}\r\n                    <br/>\r\n                    <a style={{ fontSize: 15}}>Dimension : {info.dim}</a>\r\n                  </Col>\r\n                  <Col xs={2} style={{ alignItems: \"center\"}}>\r\n                    <Row>\r\n                      <Button variant=\"danger\" onClick={DeleteHistory}>\r\n                      Delete\r\n                    </Button>\r\n                    </Row>\r\n                    <Row>\r\n                      <Button variant=\"dark\" href={`detail?id=${info.id}`}>\r\n                      Detail\r\n                    </Button>\r\n                    </Row>\r\n                    \r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n        </>\r\n      )}\r\n      {isTabletOrMobileDevice && (\r\n        <>\r\n          <Card>\r\n            <Card.Body>\r\n              <Container>\r\n                <Row>\r\n                  <Col xs={8}>\r\n                    <h6 style={{ color: \"DarkGray\" }}>\r\n                      {info.time[4]}\r\n                    </h6>\r\n                    <h6 style={{ color: \"DarkGray\" }}>\r\n                    {info.time[2]} {info.time[1]} {info.time[3]}\r\n                    </h6>\r\n                    {winnerMobile}\r\n                    <br/>\r\n                    <a style={{ fontSize: 12}}>Dimension : {info.dim}</a>\r\n                  </Col>\r\n                  <Col xs={4}>\r\n                  <Row>\r\n                      <Button variant=\"danger\" onClick={DeleteHistory}>\r\n                      Delete\r\n                    </Button>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                      <Button variant=\"dark\" href={`detail?id=${info.id}`}>\r\n                      Detail\r\n                    </Button>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\n// import component\r\nimport CardHistory from './cardHistory';\r\n// End import component\r\n\r\n// import firebase\r\nimport firebaseApp from \"./firebase\";\r\nconst db = firebaseApp.firestore();\r\nconst historyCollection = db.collection(\"History\");\r\n// End import firebase\r\n\r\nconst History = () => {\r\n  // Define responsive\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n  const isTabletOrMobileDevice = useMediaQuery({\r\n    query: \"(max-device-width: 1224px)\",\r\n  });\r\n  // End Define responsive\r\n\r\n  const [His, setHis] = useState();\r\n\r\n  useEffect(() => {\r\n    function getHistory() {\r\n      historyCollection.onSnapshot((querySnapshot) => {\r\n        let temp = [];\r\n        querySnapshot.forEach((doc) => {\r\n          let d = doc.data().time.split(\" \");\r\n          // [\"Sun\", \"May\", \"09\", \"2021\", \"14:54:21\", \"GMT+0700\", \"(Indochina\", \"Time)\"]\r\n          // console.log(Date().toLocaleString());\r\n          temp.push({\r\n            id: doc.id,\r\n            dim: doc.data().dim,\r\n            board: doc.data().board,\r\n            time: d,\r\n            win: doc.data().win,\r\n          });\r\n        });\r\n        setHis(temp);\r\n      });\r\n    }\r\n    getHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isDesktopOrLaptop && (\r\n        <>\r\n          <br />\r\n          <h2 className=\"Center\">History</h2>\r\n          <br />\r\n          <Container>\r\n            <Row>\r\n              <Col></Col>\r\n              <Col xs={10}>\r\n                {His ? (\r\n                  His.map((history, index) => \r\n                    <CardHistory info={history} key={index} />\r\n                  )\r\n                ) : (\r\n                  <Card>\r\n                    <Card.Body>Game history not found!!!</Card.Body>\r\n                  </Card>\r\n                )}\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Container>\r\n        </>\r\n      )}\r\n      {isTabletOrMobileDevice && (\r\n        <>\r\n          <br />\r\n          <h2 className=\"Center\">History</h2>\r\n          <br />\r\n          <Container>\r\n            <Row>\r\n              <Col></Col>\r\n              <Col xs={12}>\r\n              {His ? (\r\n                  His.map((history, index) => \r\n                    <CardHistory info={history} key={index} />\r\n                  )\r\n                ) : (\r\n                  <Card>\r\n                    <Card.Body>Game history not found!!!</Card.Body>\r\n                  </Card>\r\n                )}\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;","import React, { useState, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { BrowserRouter as Router, Link, useLocation } from \"react-router-dom\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport AppCSS from \"../App.css\";\r\n\r\n// import firebase\r\nimport firebaseApp from \"./firebase\";\r\nconst db = firebaseApp.firestore();\r\nconst historyCollection = db.collection(\"History\");\r\n// End import firebase\r\n\r\nconst Detail = () => {\r\n  // Define responsive\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n  const isTabletOrMobileDevice = useMediaQuery({\r\n    query: \"(max-device-width: 1224px)\",\r\n  });\r\n  // End Define responsive\r\n\r\n  var id = new URLSearchParams(useLocation().search).get(\"id\");\r\n  const [Board, SetBoard] = useState();\r\n  const [Dim, SetDim] = useState();\r\n  const [Message, SetMessage] = useState();\r\n  const [Boardrender, SetBoardrender] = useState();\r\n\r\n  useEffect(() => {\r\n    function getHistory() {\r\n      historyCollection\r\n        .doc(id)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          SetBoard(querySnapshot.data().board);\r\n          SetDim(querySnapshot.data().dim);\r\n          let time = querySnapshot.data().time.split(\" \");\r\n          if (querySnapshot.data().win == 0) {\r\n            SetMessage(\r\n              `Draw at ${time[4]} ${time[2]} ${time[1]} ${\r\n                time[3]\r\n              } in Game match dimesion ${querySnapshot.data().dim}.`\r\n            );\r\n          } else if (querySnapshot.data().win == 1) {\r\n            SetMessage(\r\n              `Player X won at ${time[4]} ${time[2]} ${time[1]} ${\r\n                time[3]\r\n              } in Game match dimesion ${querySnapshot.data().dim} x ${\r\n                querySnapshot.data().dim\r\n              }.`\r\n            );\r\n          } else if (querySnapshot.data().win == 2) {\r\n            SetMessage(\r\n              `Player O won at ${time[4]} ${time[2]} ${time[1]} ${\r\n                time[3]\r\n              } ${\"\\n\"} in Game match dimesion ${querySnapshot.data().dim} x ${\r\n                querySnapshot.data().dim\r\n              }.`\r\n            );\r\n          }\r\n        });\r\n    }\r\n    getHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isDesktopOrLaptop && (\r\n        <>\r\n          <div className=\"Center\">\r\n            <br />\r\n            <div className=\"message\">{Message}</div>\r\n            {/* {Boardrender} */}\r\n            <Container>\r\n              <Row>\r\n                <Col></Col>\r\n                <Col xs={5}>\r\n                  {Board ? (\r\n                    Board.map((tempBoard, index) => {\r\n                      // reder button to board\r\n                      if (tempBoard === 0) {\r\n                        return (\r\n                          <button\r\n                            style={{ width: 330 / Dim, height: 330 / Dim }}\r\n                            className=\"Board\"\r\n                          >\r\n                            <div style={{}} className=\"Text-Board\">\r\n                              &nbsp;\r\n                            </div>\r\n                          </button>\r\n                        );\r\n                      }\r\n                      // render card X to board\r\n                      else if (tempBoard === 1) {\r\n                        return (\r\n                          <button\r\n                            style={{ width: 330 / Dim, height: 330 / Dim }}\r\n                            className=\"Board-notclick\"\r\n                          >\r\n                            <div\r\n                              className=\"Text-Board\"\r\n                              style={{ fontSize: 240 / Dim }}\r\n                            >\r\n                              X\r\n                            </div>\r\n                          </button>\r\n                        );\r\n                      }\r\n                      // render card X to board\r\n                      else if (tempBoard === 2) {\r\n                        return (\r\n                          <button\r\n                            style={{ width: 330 / Dim, height: 330 / Dim }}\r\n                            className=\"Board-notclick\"\r\n                          >\r\n                            <div\r\n                              className=\"Text-Board\"\r\n                              style={{ fontSize: 240 / Dim }}\r\n                            >\r\n                              O\r\n                            </div>\r\n                          </button>\r\n                        );\r\n                      }\r\n                    })\r\n                  ) : (\r\n                    <a></a>\r\n                  )}\r\n                </Col>\r\n                <Col></Col>\r\n              </Row>\r\n            </Container>\r\n            <br />\r\n            <Button variant=\"dark\" href=\"history\">\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n      {isTabletOrMobileDevice && (\r\n        <>\r\n          <div className=\"Center\">\r\n            <br />\r\n            <div className=\"message\">{Message}</div>\r\n            {/* {Boardrender} */}\r\n            {Board ? (\r\n              Board.map((tempBoard, index) => {\r\n                // reder button to board\r\n                if (tempBoard === 0) {\r\n                  return (\r\n                    <button\r\n                      style={{ width: 330 / Dim, height: 330 / Dim }}\r\n                      className=\"Board\"\r\n                    >\r\n                      <div style={{}} className=\"Text-Board\">\r\n                        &nbsp;\r\n                      </div>\r\n                    </button>\r\n                  );\r\n                }\r\n                // render card X to board\r\n                else if (tempBoard === 1) {\r\n                  return (\r\n                    <button\r\n                      style={{ width: 330 / Dim, height: 330 / Dim }}\r\n                      className=\"Board-notclick\"\r\n                    >\r\n                      <div\r\n                        className=\"Text-Board\"\r\n                        style={{ fontSize: 240 / Dim }}\r\n                      >\r\n                        X\r\n                      </div>\r\n                    </button>\r\n                  );\r\n                }\r\n                // render card X to board\r\n                else if (tempBoard === 2) {\r\n                  return (\r\n                    <button\r\n                      style={{ width: 330 / Dim, height: 330 / Dim }}\r\n                      className=\"Board-notclick\"\r\n                    >\r\n                      <div\r\n                        className=\"Text-Board\"\r\n                        style={{ fontSize: 240 / Dim }}\r\n                      >\r\n                        O\r\n                      </div>\r\n                    </button>\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <a></a>\r\n            )}\r\n            <br />\r\n            <Button variant=\"dark\" href=\"history\">\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Nav,\r\n  Navbar\r\n} from \"react-bootstrap\";\r\n\r\nconst SNavbar = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ marginLeft: 30, marginRight: 20 }}>\r\n      <Navbar.Brand href=\"/\">Tic Tac Toe</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\">Play</Nav.Link>\r\n          <Nav.Link href=\"history\">History</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default SNavbar;\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// import page\nimport Play from './components/play';\nimport History from './components/history';\nimport Detail from './components/detail';\n// End import page\n\n// import component\nimport Navbar from './components/Navbar/navbar'\n// End import component\n\nconst App = () => {\n\n  return (\n    <div>\n      <header className=\"Nav\">\n        <Navbar />\n      </header>\n      \n      <body>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={Play} />\n            <Route exact path='/history' component={History} />\n            <Route exact path='/detail' component={Detail} />\n          </Switch>\n        </Router>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}